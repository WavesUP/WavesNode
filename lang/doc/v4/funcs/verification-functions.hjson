{
  funcs: [
    {
      name: "sigVerify"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "Verifies a [Curve25519](https://en.wikipedia.org/wiki/Curve25519) signature."
      paramsDoc: [ "The message.", "The signature.", "The account public key." ]
    }
    {
      name: "sigVerify_16Kb"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "Verifies a [Curve25519](https://en.wikipedia.org/wiki/Curve25519) signature. For message size <= 16Kb."
      paramsDoc: [ "The message.", "The signature.", "The account public key." ]
    }
    {
      name: "sigVerify_32Kb"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "Verifies a [Curve25519](https://en.wikipedia.org/wiki/Curve25519) signature. For message size <= 32Kb."
      paramsDoc: [ "The message.", "The signature.", "The account public key." ]
    }
    {
      name: "sigVerify_64Kb"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "Verifies a [Curve25519](https://en.wikipedia.org/wiki/Curve25519) signature. For message size <= 64Kb."
      paramsDoc: [ "The message.", "The signature.", "The account public key." ]
    }
    {
      name: "sigVerify_128Kb"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "Verifies a [Curve25519](https://en.wikipedia.org/wiki/Curve25519) signature. For message size <= 128Kb."
      paramsDoc: [ "The message.", "The signature.", "The account public key." ]
    }
    {
      name: "rsaVerify"
      params: [
        "Md5|NoAlg|Sha1|Sha224|Sha256|Sha3224|Sha3256|Sha3384|Sha3512|Sha384|Sha512"
        "ByteVector"
        "ByteVector"
        "ByteVector"
      ]
      doc: "Verifies an [RSA](https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29) signature."
      paramsDoc: [ "The RSA algorithm.", "The message.", "The signature.", "The public key." ]
    }
    {
      name: "rsaVerify_16Kb"
      params: [
        "Md5|NoAlg|Sha1|Sha224|Sha256|Sha3224|Sha3256|Sha3384|Sha3512|Sha384|Sha512"
        "ByteVector"
        "ByteVector"
        "ByteVector"
      ]
      doc: "Verifies an [RSA](https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29) signature. For message size <= 16Kb."
      paramsDoc: [ "The RSA algorithm.", "The message.", "The signature.", "The public key." ]
    }
    {
      name: "rsaVerify_32Kb"
      params: [
        "Md5|NoAlg|Sha1|Sha224|Sha256|Sha3224|Sha3256|Sha3384|Sha3512|Sha384|Sha512"
        "ByteVector"
        "ByteVector"
        "ByteVector"
      ]
      doc: "Verifies an [RSA](https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29) signature. For message size <= 32Kb."
      paramsDoc: [ "The RSA algorithm.", "The message.", "The signature.", "The public key." ]
    }
    {
      name: "rsaVerify_64Kb"
      params: [
        "Md5|NoAlg|Sha1|Sha224|Sha256|Sha3224|Sha3256|Sha3384|Sha3512|Sha384|Sha512"
        "ByteVector"
        "ByteVector"
        "ByteVector"
      ]
      doc: "Verifies an [RSA](https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29) signature. For message size <= 64Kb."
      paramsDoc: [ "The RSA algorithm.", "The message.", "The signature.", "The public key." ]
    }
    {
      name: "rsaVerify_128Kb"
      params: [
        "Md5|NoAlg|Sha1|Sha224|Sha256|Sha3224|Sha3256|Sha3384|Sha3512|Sha384|Sha512"
        "ByteVector"
        "ByteVector"
        "ByteVector"
      ]
      doc: "Verifies an [RSA](https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29) signature. For message size <= 128Kb."
      paramsDoc: [ "The RSA algorithm.", "The message.", "The signature.", "The public key." ]
    }
    {
      name: "groth16Verify"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_1inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 1 input."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_2inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 2 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_3inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 3 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_4inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 4 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_5inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 5 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_6inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 6 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_7inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 7 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_8inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 8 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_9inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 9 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_10inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 10 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_11inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 11 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_12inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 12 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_13inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 13 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_14inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 14 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "groth16Verify_15inputs"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "[Zero-knowledge proof](https://en.wikipedia.org/wiki/Zero-knowledge_proof) verifier function. With 15 inputs."
      paramsDoc: [ "Verifying key.", "Proofs.", "Inputs." ]
    }
    {
      name: "checkMerkleProof"
      params: [ "ByteVector", "ByteVector", "ByteVector" ]
      doc: "Verifies if a tree of hashes is part of the [Merkle tree](https://en.wikipedia.org/wiki/Merkle_tree)."
      paramsDoc: [
        "The root hash of the Merkle tree."
        "The array of bytes of the Merkle tree proof."
        "The tree of hashes."
      ]
    }
    {
      name: "createMerkleRoot"
      params: [ "List[ByteVector]", "ByteVector", "Int" ]
      doc: "Calculates the Merkle root hash for transactions of block."
      paramsDoc: [
        "Array of sibling hashes of the Merkle tree."
        "Hash of transaction."
        "Index of the transaction in the block."
      ]
    }
  ]
}