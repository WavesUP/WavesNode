syntax = "proto3";
package com.wavesplatform.api.grpc;

import "transactions_api.proto";
import "transaction.proto";

service AccountsApi {
    rpc GetBalances (BalanceReuqest) returns (stream Balance);
    rpc GetScript (AccountRequest) returns (ScriptData);
    rpc GetDataEntries (DataRequest) returns (stream DataEntryResponse);
    rpc GetActiveLeases (AccountRequest) returns (stream TransactionWithHeight);
}

message BalanceRequest {
    bytes address = 1;
    bytes asset_id = 2;
    int64 height = 3;
}

message WavesBalance {
    int64 regular = 1;
    int64 available = 2;
    int64 effective = 3;
    int64 generating = 4;
    int64 lease_in = 5;
    int64 lease_out = 6;
}

message Balance {
    bytes address = 1;
    // check naming
    oneof balance {
        WavesBalance waves_balance = 2;
        AssetAmount asset_balance = 3;
    }
}

message AccountRequest {
    bytes address = 1;
}

message DataRequest {
    bytes address = 1;
    string key = 2;
}

message DataEntryResponse {
    bytes address = 1;
    DataTransactionData.DataEntry entry = 2;
}

message ScriptData {
    bytes script_bytes = 1;
    string script_text = 2;
    int64 complexity = 3;
}
